# Docker Compose - Hedwige Development Environment
# DÃ©fi #15 - Workshop Poudlard RP 2025

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hedwige-postgres
    environment:
      POSTGRES_DB: hedwige
      POSTGRES_USER: hedwige_user
      POSTGRES_PASSWORD: hedwige_password_dev
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hedwige-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hedwige_user -d hedwige"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (pour sessions et cache)
  redis:
    image: redis:7-alpine
    container_name: hedwige-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hedwige-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: hedwige-backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://hedwige_user:hedwige_password_dev@postgres:5432/hedwige
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev_jwt_secret_change_in_production
      JWT_REFRESH_SECRET: dev_refresh_secret_change_in_production
      # OAuth2.0 Credentials (dev)
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      MICROSOFT_CLIENT_ID: ${MICROSOFT_CLIENT_ID}
      MICROSOFT_CLIENT_SECRET: ${MICROSOFT_CLIENT_SECRET}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      # Email Configuration
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      IMAP_HOST: ${IMAP_HOST:-imap.gmail.com}
      IMAP_PORT: ${IMAP_PORT:-993}
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hedwige-network
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: hedwige-frontend
    environment:
      VITE_API_URL: http://localhost:3001/api
      VITE_APP_NAME: Hedwige
      VITE_APP_VERSION: 1.0.0
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - hedwige-network
    command: npm run dev -- --host

  # MailHog (Email Testing - Development)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: hedwige-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - hedwige-network

  # Adminer (Database UI - Development)
  adminer:
    image: adminer:latest
    container_name: hedwige-adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    networks:
      - hedwige-network
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  hedwige-network:
    driver: bridge
    name: hedwige-network

